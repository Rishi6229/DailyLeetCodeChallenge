class Solution {
    public List<String> topKFrequent(String[] words, int k) {
        List<String>ans = new ArrayList<>();

        HashMap<String , Integer>map = new HashMap<>();
        for(int i =0; i < words.length;i++)
        {
            if(map.containsKey(words[i]))
            {
                map.put(words[i] , map.get(words[i]) + 1);
            }
            else
            {
                map.put(words[i] , 1);
            }
        }
        PriorityQueue<String> pq = new PriorityQueue<String>((s1,s2) -> { int compare = Integer.compare(map.get(s2),map.get(s1)); if(compare==0){ compare = s1.compareTo(s2);} return compare;});

        for(String s:map.keySet())
        {
            pq.offer(s);
        }


        for(int i =0; i < k; i++)
        {
            ans.add(pq.poll());
        }

        return ans;


    }
}